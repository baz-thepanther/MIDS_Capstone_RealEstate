import argparse
import json
import pprint
import sys
import urllib
import urllib2

import oauth2

ZIPCODES = [94002,94005,94010,94011,94013,94014,94015,94016,94017,94018,94019,94020,94021,94022,94023,94024,94025,94026,94027,94028,94030,94035,94037,94038,94039,94040,94041,94042,94043,94044,94060,94061,94062,94063,94064,94065,94066,94070,94074,94080,94083,94085,94086,94087,94088,94089,94101,94102,94103,94104,94105,94106,94107,94108,94109,94110,94111,94112,94114,94115,94116,94117,94118,94119,94120,94121,94122,94123,94124,94125,94126,94127,94128,94129,94130,94131,94132,94133,94134,94135,94136,94137,94138,94139,94140,94141,94142,94143,94144,94145,94146,94147,94150,94151,94152,94153,94154,94155,94156,94158,94159,94160,94161,94162,94163,94164,94171,94172,94175,94177,94188,94199,94301,94302,94303,94304,94305,94306,94309,94401,94402,94403,94404,94497,94501,94502,94503,94505,94506,94507,94508,94509,94510,94511,94512,94513,94514,94515,94516,94517,94518,94519,94520,94521,94522,94523,94524,94525,94526,94527,94528,94529,94530,94531,94533,94534,94535,94536,94537,94538,94539,94540,94541,94542,94543,94544,94545,94546,94547,94548,94549,94550,94551,94552,94553,94555,94556,94557,94558,94559,94560,94561,94562,94563,94564,94565,94566,94567,94568,94569,94570,94571,94572,94573,94574,94575,94576,94577,94578,94579,94580,94581,94582,94583,94585,94586,94587,94588,94589,94590,94591,94592,94595,94596,94597,94598,94599,94601,94602,94603,94604,94605,94606,94607,94608,94609,94610,94611,94612,94613,94614,94615,94617,94618,94619,94620,94621,94622,94623,94624,94625,94649,94659,94660,94661,94662,94666,94701,94702,94703,94704,94705,94706,94707,94708,94709,94710,94712,94720,94801,94802,94803,94804,94805,94806,94807,94808,94820,94850,94901,94903,94904,94912,94913,94914,94915,94920,94922,94923,94924,94925,94926,94927,94928,94929,94930,94931,94933,94937,94938,94939,94940,94941,94942,94945,94946,94947,94948,94949,94950,94951,94952,94953,94954,94955,94956,94957,94960,94963,94964,94965,94966,94970,94971,94972,94973,94974,94975,94976,94977,94978,94979,94998,94999,95001,95002,95003,95005,95006,95007,95008,95009,95010,95011,95013,95014,95015,95017,95018,95019,95020,95021,95023,95024,95026,95030,95031,95032,95033,95035,95036,95037,95038,95041,95042,95043,95044,95045,95046,95050,95051,95052,95053,95054,95055,95056,95060,95061,95062,95063,95064,95065,95066,95067,95070,95071,95073,95075,95076,95077,95101,95103,95106,95108,95109,95110,95111,95112,95113,95115,95116,95117,95118,95119,95120,95121,95122,95123,95124,95125,95126,95127,95128,95129,95130,95131,95132,95133,95134,95135,95136,95138,95139,95140,95141,95148,95150,95151,95152,95153,95154,95155,95156,95157,95158,95159,95160,95161,95164,95170,95172,95173,95190,95191,95192,95193,95194,95196,95201,95202,95203,95204,95205,95206,95207,95208,95209,95210,95211,95212,95213,95215,95219,95220,95227,95231,95234,95236,95237,95240,95241,95242,95253,95258,95267,95269,95296,95297,95304,95320,95330,95336,95337,95366,95376,95377,95378,95391,95401,95402,95403,95404,95405,95406,95407,95409,95412,95416,95419,95421,95425,95430,95431,95433,95436,95439,95441,95442,95444,95446,95448,95450,95452,95462,95465,95471,95472,95473,95476,95480,95486,95487,95492,95497,95620,95625,95686,95687,95688,95696]


API_HOST = 'api.yelp.com'
DEFAULT_TERM = 'dinner'
DEFAULT_LOCATION = 'San Francisco, CA'
SEARCH_LIMIT = 3
SEARCH_PATH = '/v2/search/'
BUSINESS_PATH = '/v2/business/'

# OAuth credential placeholders that must be filled in by users.
CONSUMER_KEY = ''
CONSUMER_SECRET = ''
TOKEN = ''
TOKEN_SECRET = ''

def request(host, path, url_params=None):
	"""Prepares OAuth authentication and sends the request to the API.
	Args:
		host (str): The domain host of the API.
		path (str): The path of the API after the domain.
		url_params (dict): An optional set of query parameters in the request.
	Returns:
		dict: The JSON response from the request.
	Raises:
		urllib2.HTTPError: An error occurs from the HTTP request.
	"""
	url_params = url_params or {}
	url = 'http://{0}{1}?'.format(host, urllib.quote(path.encode('utf8')))
	consumer = oauth2.Consumer(CONSUMER_KEY, CONSUMER_SECRET)
	oauth_request = oauth2.Request(method="GET", url=url, parameters=url_params)
	oauth_request.update(
		{
			'oauth_nonce': oauth2.generate_nonce(),
			'oauth_timestamp': oauth2.generate_timestamp(),
			'oauth_token': TOKEN,
			'oauth_consumer_key': CONSUMER_KEY
		}
	)
	token = oauth2.Token(TOKEN, TOKEN_SECRET)
	oauth_request.sign_request(oauth2.SignatureMethod_HMAC_SHA1(), consumer, token)
	signed_url = oauth_request.to_url()
	print u'Querying {0} ...'.format(url)
	conn = urllib2.urlopen(signed_url, None)
	try:
		response = json.loads(conn.read())
	finally:
		conn.close()
	return response

def search(location):
	"""Query the Search API by a search term and location.
	Args:
		term (str): The search term passed to the API.
		location (str): The search location passed to the API.
	Returns:
		dict: The JSON response from the request.
	"""
	url_params = {
		'term': 'Coffeeshop',
		'location': location,
		'limit': SEARCH_LIMIT,
		'sort':1,
		'radius_filter':1600
	}
	return request(API_HOST, SEARCH_PATH, url_params=url_params)


def main():
	s = []
	for i in ZIPCODES:
		r = search(i)
		s.append(str(i) + ',' + str(r['total']))
	for i in s:
		print s[i]

if __name__ == '__main__':
		main()
